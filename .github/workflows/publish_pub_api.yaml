name: Publish Image to Docker Hub

on:
  [workflow_dispatch]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres1:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: tasks
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          key: sqlx-${{ env.SQLX_VERSION }}
      - name: Install sqlx-cli
        run:
            cargo install sqlx-cli
            --version=${{ env.SQLX_VERSION }}
            --features ${{ env.SQLX_FEATURES }}
            --no-default-features
            --locked
      - name: Migrate database
        run: |
          sudo apt-get install libpq-dev -y
          SKIP_DOCKER=true ./scripts/init_db.sh
      - name: Check sqlx-data.json is up-to-date
        run: |
          cargo sqlx prepare --workspace --check
      - name: Run tests
        run: TEST_LOG=true cargo test
        env:
          APP__DATABASE_PORT: ${{ secrets.APP__TASKS_PORT }}
          APP__DATABASE_DATABASE_USER: ${{ secrets.APP__TASKS_DATABASE_USER }}
          APP__DATABASE_DATABASE_PASSWORD: ${{ secrets.APP__TASKS_DATABASE_PASSWORD }}
          APP__DATABASE_DATABASE_DB: ${{ secrets.APP__TASKS_DATABASE_DB }}
          APP__DATABASE_DATABASE_HOST: ${{ secrets.APP__TASKS_DATABASE_HOST }}
          APP__S3_REGION: ${{ secrets.APP__S3_REGION }}
          APP__S3_ACCESS_KEY: ${{ secrets.APP__S3_ACCESS_KEY }}
          APP__S3_SECRET_KEY: ${{ secrets.APP__S3_SECRET_KEY }}
          APP__S3_BUCKET: ${{ secrets.APP__S3_BUCKET }}

  publish_image:
    name: Publish Docker Image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Get short SHA
        id: slug
        run: echo "::set-output name=sha7::$(echo ${GITHUB_SHA} | cut -c1-7)"
      - name: Build Docker image
        run: |
          docker build . -t pradeep800/pub_api:${{ steps.slug.outputs.sha7 }} -f ./pub_api/Dockerfile
          docker tag pradeep800/pub_api:${{ steps.slug.outputs.sha7 }} pradeep800/pub_api:latest
      - name: Publish Docker image
        run: |
          echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login -u pradeep800 --password-stdin
          docker push pradeep800/pub_api:${{ steps.slug.outputs.sha7 }}
          docker push pradeep800/pub_api:latest

